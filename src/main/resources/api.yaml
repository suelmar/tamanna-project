swagger: "2.0"
info:
  description: "Take-home assignment for backend engineers"
  version: "1.0.0"
  title: "Tamanna Project"
  contact:
    email: "suelmar.castro@gmail.com"
host: "localhost:8080"
paths:
  /candidate:
    post:
      tags:
      - "candidate"
      summary: "Add a new candidate"
      description: ""
      operationId: "create"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Candidate object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Candidate"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Candidate"
        "409":
          description: "Candidate already exists"
  /candidate/{candidateId}:
    get:
      tags:
      - "candidate"
      summary: "Find candidate by ID"
      description: "Returns a single candidate"
      operationId: "getOne"
      produces:
      - "application/json"
      parameters:
      - name: "candidateId"
        in: "path"
        description: "ID of candidate to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Candidate"
        "404":
          description: "Candidate not found"
    put:
      tags:
      - "candidate"
      summary: "Update an existing candidate"
      description: ""
      operationId: "update"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "candidateId"
        in: "path"
        description: "candidate id to update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Candidate object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Candidate"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Candidate"
        "404":
          description: "Candidate not found"
        "409":
          description: "Candidate already exists"
    delete:
      tags:
      - "candidate"
      summary: "Deletes a candidate"
      description: ""
      operationId: "delete"
      parameters:
      - name: "candidateId"
        in: "path"
        description: "Candidate id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
        "404":
          description: "Candidate not found"
  /candidate/{candidateId}/slots:
    get:
      tags:
      - "candidate"
      summary: "Find all slots from a candidate"
      description: "Returns a collection of slots from a candidate"
      operationId: "getCandidadteSlots"
      produces:
      - "application/json"
      parameters:
      - name: "candidateId"
        in: "path"
        description: "ID of candidate to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CandidateSlot"
        "404":
          description: "Candidate not found"
    post:
      tags:
      - "candidate"
      summary: "Add a new slot to a candidate"
      description: ""
      operationId: "createCandidateSlot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "candidateId"
        in: "path"
        description: "ID of candidate to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "CandidateSlot object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/CandidateSlot"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/CandidateSlot"
        "400":
          description: "Invalid candidateSlot"
        "404":
          description: "Candidate not found"
  /interviewer:
    post:
      tags:
      - "interviewer"
      summary: "Add a new interviewer"
      description: ""
      operationId: "createInterviewer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Interviewer object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Interviewer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Interviewer"
        "409":
          description: "Interviewer already exists"
  /interviewer/{interviewerId}:
    get:
      tags:
      - "interviewer"
      summary: "Find interviewer by ID"
      description: "Returns a single interviewer"
      operationId: "getOneInterviewer"
      produces:
      - "application/json"
      parameters:
      - name: "interviewerId"
        in: "path"
        description: "ID of interviewer to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Interviewer"
        "404":
          description: "Interviewer not found"
    put:
      tags:
      - "interviewer"
      summary: "Update an existing interviewer"
      description: ""
      operationId: "updateInterviewer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "interviewerId"
        in: "path"
        description: "interviewer id to update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Interviewer object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Interviewer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Interviewer"
        "404":
          description: "Interviewer not found"
        "409":
          description: "Interviewer already exists"
    delete:
      tags:
      - "interviewer"
      summary: "Deletes a interviewer"
      description: ""
      operationId: "deleteInterviewer"
      parameters:
      - name: "interviewerId"
        in: "path"
        description: "Interviewer id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
        "404":
          description: "Candidate not found"
  /interviewer/{interviewerId}/slots:
    get:
      tags:
      - "interviewer"
      summary: "Find all slots from an interviewer"
      description: "Returns a collection of slots from an interviewer"
      operationId: "getInterviewerSlots"
      produces:
      - "application/json"
      parameters:
      - name: "interviewerId"
        in: "path"
        description: "ID of candidate to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/InterviewerSlot"
        "404":
          description: "Candidate not found"
    post:
      tags:
      - "interviewer"
      summary: "Add a new slot to a interviewer"
      description: ""
      operationId: "createInterviewerSlot"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "interviewerId"
        in: "path"
        description: "ID of interviewer to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "InterviewerSlot object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/CandidateSlot"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/InterviewerSlot"
        "400":
          description: "Invalid InterviewerSlot"
        "404":
          description: "Interviewer not found"
definitions:
  Candidate:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Interviewer:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  CandidateSlot:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      slotDate:
        type: "string"
        format: "date-time"
  InterviewerSlot:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      slotDate:
        type: "string"
        format: "date-time"